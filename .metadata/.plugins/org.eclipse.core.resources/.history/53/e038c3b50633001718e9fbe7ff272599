import java.util.List;

import org.jgap.gp.CommandGene;
import org.jgap.gp.GPFitnessFunction;
import org.jgap.gp.IGPProgram;
import org.jgap.gp.terminal.Variable;

public class ClassifierFitnessFunction extends GPFitnessFunction {

	private List<int[]> patients;

	public ClassifierFitnessFunction(List<int[]> patients) {
		this.patients = patients;
	}

	@Override
	protected double evaluate(IGPProgram ind) {
		int numCorrect= 0;
		Object[] noargs = new Object[0];
		for (int[] p : patients) {
			for (int i = 0; i < p.length - 1; i++){
				CommandGene var = ind.getNodeSets()[0][i];
				if(var instanceof Variable){
					Variable v = (Variable) var;
					v.set(p[i]);
				}else {
					throw new RuntimeException("Firsts nodes in node set are not Variables");
				}
			}
			double result = ind.execute_double(0, noargs);
			if((result < 0 && p[p.length-1] == 2) || (result > 0 && p[p.length-1] == 4)){
				numCorrect++;
			}
		}
		return numCorrect / patients.size();
	}

}
